// <auto-generated />
using System;
using BusApiProyect.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusApiProyect.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250120181134_correctionsB")]
    partial class correctionsB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BusApiProyect.Data.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ScheduleForBookingId")
                        .HasColumnType("int");

                    b.Property<int>("SeatsBooked")
                        .HasColumnType("int");

                    b.Property<int>("UserForBookingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleForBookingId");

                    b.HasIndex("UserForBookingId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("BusApiProyect.Data.Models.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BusNumber")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusApiProyect.Data.Models.Bus_Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Arrival_Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("BusScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RouteScheduledId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusScheduleId");

                    b.HasIndex("RouteScheduledId");

                    b.ToTable("Bus_Schedule");
                });

            modelBuilder.Entity("BusApiProyect.Data.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Destination_Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Destination_Longitude")
                        .HasColumnType("double");

                    b.Property<double>("Distance")
                        .HasColumnType("double");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Origin_Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Origin_Longitude")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("BusApiProyect.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BusApiProyect.Data.Models.Booking", b =>
                {
                    b.HasOne("BusApiProyect.Data.Models.Bus_Schedule", "ScheduleForBooking")
                        .WithMany()
                        .HasForeignKey("ScheduleForBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusApiProyect.Data.Models.User", "UserForBooking")
                        .WithMany()
                        .HasForeignKey("UserForBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduleForBooking");

                    b.Navigation("UserForBooking");
                });

            modelBuilder.Entity("BusApiProyect.Data.Models.Bus_Schedule", b =>
                {
                    b.HasOne("BusApiProyect.Data.Models.Bus", "BusSchedule")
                        .WithMany()
                        .HasForeignKey("BusScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusApiProyect.Data.Models.Route", "RouteScheduled")
                        .WithMany()
                        .HasForeignKey("RouteScheduledId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusSchedule");

                    b.Navigation("RouteScheduled");
                });
#pragma warning restore 612, 618
        }
    }
}
